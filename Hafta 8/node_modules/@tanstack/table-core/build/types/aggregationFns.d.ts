export declare const aggregationFns: {
    sum: typeof sum;
    min: typeof min;
    max: typeof max;
    extent: typeof extent;
    mean: typeof mean;
    median: typeof median;
    unique: typeof unique;
    uniqueCount: typeof uniqueCount;
    count: typeof count;
};
export declare type BuiltInAggregationFn = keyof typeof aggregationFns;
declare function sum(_getLeafValues: () => unknown[], getChildValues: () => unknown[]): number;
declare function min(_getLeafValues: () => unknown[], getChildValues: () => unknown[]): number | undefined;
declare function max(_getLeafValues: () => unknown[], getChildValues: () => unknown[]): number | undefined;
declare function extent(_getLeafValues: () => unknown[], getChildValues: () => unknown[]): (number | undefined)[];
export declare function mean(getLeafValues: () => unknown[]): number | undefined;
declare function median(getLeafValues: () => unknown[]): number | undefined;
declare function unique<T>(getLeafValues: () => T[]): T[];
declare function uniqueCount(getLeafValues: () => unknown[]): number;
declare function count(getLeafValues: () => unknown[]): number;
export {};
